Index: target/classes/config.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ============================================================\r\n# Plugin: DiscordServerStatus\r\n# Author: Goros\r\n# Copyright (C) 2025 Goros. All rights reserved.\r\n# Description: This plugin integrates Discord with Minecraft\r\n# and allows you to display server status in your Discord channel.\r\n# ============================================================\r\ndiscord:\r\n  bot-token: \"YOUR_BOT_TOKEN\" # Replace with your Discord bot token\r\n  channel-id: \"YOUR_DISCORD_CHANNEL_ID\"\r\n  prefix: \"!\" #Example: \"!ip\" will trigger the ip display\r\n  online-status: \"online\" # online | dnd or do_not_disturb | invisible | idle
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/config.yml b/target/classes/config.yml
--- a/target/classes/config.yml	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/target/classes/config.yml	(date 1756320804563)
@@ -9,4 +9,5 @@
   bot-token: "YOUR_BOT_TOKEN" # Replace with your Discord bot token
   channel-id: "YOUR_DISCORD_CHANNEL_ID"
   prefix: "!" #Example: "!ip" will trigger the ip display
-  online-status: "online" # online | dnd or do_not_disturb | invisible | idle
\ No newline at end of file
+  online-status: "online" # online | dnd or do_not_disturb | invisible | idle
+  activity-status: "Something"
\ No newline at end of file
Index: src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.goros.discordServerStatus.discord.commands;\r\n\r\nimport net.dv8tion.jda.api.JDA;\r\nimport net.dv8tion.jda.api.Permission;\r\nimport net.dv8tion.jda.api.entities.Activity;\r\nimport net.dv8tion.jda.api.entities.Member;\r\nimport net.dv8tion.jda.api.events.message.MessageReceivedEvent;\r\nimport org.goros.discordServerStatus.discord.commands.interfaces.ICommand;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\npublic class SetActivityStatus implements ICommand {\r\n    private static final Logger log = LoggerFactory.getLogger(SetActivityStatus.class);\r\n\r\n    @Override\r\n    public String getName() {\r\n        return \"set\";\r\n    }\r\n\r\n    @Override\r\n    public String getHelp() {\r\n        return \"Sets the bot's online status. \\nUsage: `!set status <online|idle|dnd|invisible>`\";\r\n    }\r\n\r\n    @Override\r\n    public void execute(MessageReceivedEvent event, List<String> args) {\r\n        Member member = event.getMember();\r\n\r\n        if(!event.isFromGuild() || member == null) {\r\n            return;\r\n        }\r\n\r\n        if(!member.hasPermission(Permission.ADMINISTRATOR)) {\r\n            return;\r\n        }\r\n\r\n        if(args.size() < 2 || args.get(0).equalsIgnoreCase(\"status\")) {\r\n            return;\r\n        }\r\n\r\n        String desiredActitivity = args.get(1);\r\n        JDA jda = event.getJDA();\r\n\r\n        Optional<Activity> newActivityStatus = getActivityStatusFromString(desiredActitivity);\r\n\r\n        if (newActivityStatus.isPresent()) {\r\n            Activity newActivity = newActivityStatus.get();\r\n            jda.getPresence().setActivity(newActivity);\r\n            event.getChannel().sendMessage(\"✅ Bot status has been updated to **\" + newActivity.getName() + \"**.\").queue();\r\n        } else {\r\n            event.getChannel().sendMessage(\"❌ Invalid Command Usage\").queue();\r\n        }\r\n    }\r\n\r\n    private Optional<Activity> getActivityStatusFromString(String status) {\r\n        return switch (status.toLowerCase()) {\r\n            case \"playing\" -> Optional.of(Activity.playing(\"Something\"));\r\n            case \"listening\" -> Optional.of(Activity.listening(\"Something\"));\r\n            case \"watching\" -> Optional.of(Activity.watching(\"Something\"));\r\n            default -> Optional.empty();\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java b/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java
--- a/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java	(date 1756321009267)
@@ -5,15 +5,20 @@
 import net.dv8tion.jda.api.entities.Activity;
 import net.dv8tion.jda.api.entities.Member;
 import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
+import org.bukkit.configuration.ConfigurationSection;
+import org.bukkit.configuration.file.FileConfiguration;
+import org.bukkit.plugin.java.JavaPlugin;
+import org.goros.discordServerStatus.DiscordServerStatus;
 import org.goros.discordServerStatus.discord.commands.interfaces.ICommand;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import java.io.File;
 import java.util.List;
 import java.util.Optional;
 
 public class SetActivityStatus implements ICommand {
-    private static final Logger log = LoggerFactory.getLogger(SetActivityStatus.class);
+    private String activityStatus;
 
     @Override
     public String getName() {
@@ -22,7 +27,7 @@
 
     @Override
     public String getHelp() {
-        return "Sets the bot's online status. \nUsage: `!set status <online|idle|dnd|invisible>`";
+        return "Sets the bot's online status. \nUsage: `!set activity <playing|watching|listening>`";
     }
 
     @Override
@@ -34,10 +39,12 @@
         }
 
         if(!member.hasPermission(Permission.ADMINISTRATOR)) {
+            event.getChannel().sendMessage("You do not have permission").queue();
             return;
         }
 
-        if(args.size() < 2 || args.get(0).equalsIgnoreCase("status")) {
+        if(args.size() < 2 || !args.get(0).equalsIgnoreCase("activity")) {
+            event.getChannel().sendMessage("❌ Invalid Command Usage: " + getHelp()).queue();
             return;
         }
 
@@ -49,17 +56,19 @@
         if (newActivityStatus.isPresent()) {
             Activity newActivity = newActivityStatus.get();
             jda.getPresence().setActivity(newActivity);
-            event.getChannel().sendMessage("✅ Bot status has been updated to **" + newActivity.getName() + "**.").queue();
+            event.getChannel().sendMessage("✅ Bot status has been updated to **" + newActivity.getType() + "**.").queue();
         } else {
-            event.getChannel().sendMessage("❌ Invalid Command Usage").queue();
+            event.getChannel().sendMessage("Invalid status. Please use one of: `playing` `listening` `watching`.").queue();
         }
     }
 
-    private Optional<Activity> getActivityStatusFromString(String status) {
-        return switch (status.toLowerCase()) {
-            case "playing" -> Optional.of(Activity.playing("Something"));
-            case "listening" -> Optional.of(Activity.listening("Something"));
-            case "watching" -> Optional.of(Activity.watching("Something"));
+    private Optional<Activity> getActivityStatusFromString(String activity) {
+        FileConfiguration config = DiscordServerStatus.getInstance().getConfig();
+        String section = config.getString("discord.activity-status");
+        return switch (activity.toLowerCase()) {
+            case "playing" -> Optional.of(Activity.playing(section));
+            case "listening" -> Optional.of(Activity.listening(section));
+            case "watching" -> Optional.of(Activity.watching(section));
             default -> Optional.empty();
         };
     }
Index: src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.goros.discordServerStatus.discord.commands;\r\n\r\nimport net.dv8tion.jda.api.JDA;\r\nimport net.dv8tion.jda.api.OnlineStatus;\r\nimport net.dv8tion.jda.api.Permission;\r\nimport net.dv8tion.jda.api.entities.Member;\r\nimport net.dv8tion.jda.api.events.message.MessageReceivedEvent;\r\nimport org.goros.discordServerStatus.discord.commands.interfaces.ICommand;\r\n\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\npublic class SetOnlineStatusCommand implements ICommand {\r\n    @Override\r\n    public String getName() {\r\n        return \"set\";\r\n    }\r\n\r\n    @Override\r\n    public String getHelp() {\r\n        return \"Sets the bot's online status. \\nUsage: `!set status <online|idle|dnd|invisible>`\";\r\n    }\r\n\r\n    @Override\r\n    public void execute(MessageReceivedEvent event, List<String> args) {\r\n        Member member = event.getMember();\r\n\r\n        if(!event.isFromGuild() || member == null) {\r\n            return;\r\n        }\r\n\r\n        if(!member.hasPermission(Permission.ADMINISTRATOR)) {\r\n            event.getChannel().sendMessage(\"❌ You do not have permission to use this command.\").queue();\r\n            return;\r\n        }\r\n\r\n        // We expect \"!set status <value>\", so we need at least 2 arguments.\r\n        if (args.size() < 2 || !args.get(0).equalsIgnoreCase(\"status\")) {\r\n            event.getChannel().sendMessage(\"Invalid command usage. \" + getHelp()).queue();\r\n            return;\r\n        }\r\n\r\n        String desiredStatus = args.get(1);\r\n        JDA jda = event.getJDA();\r\n\r\n        Optional<OnlineStatus> newStatusOptional = getOnlineStatusFromString(desiredStatus);\r\n\r\n        if(newStatusOptional.isPresent()) {\r\n            OnlineStatus newStatus = newStatusOptional.get();\r\n            jda.getPresence().setStatus(newStatus);\r\n            event.getChannel().sendMessage(\"✅ Bot status has been updated to **\" + newStatus.getKey().toUpperCase() + \"**.\").queue();\r\n        } else {\r\n            event.getChannel().sendMessage(\"❌ Invalid status. Please use one of: `online`, `idle`, `dnd`, `invisible`.\").queue();\r\n        }\r\n    }\r\n\r\n    private Optional<OnlineStatus> getOnlineStatusFromString(String status) {\r\n        return switch (status.toLowerCase()) {\r\n            case \"online\" -> Optional.of(OnlineStatus.ONLINE);\r\n            case \"idle\" -> Optional.of(OnlineStatus.IDLE);\r\n            case \"dnd\", \"do_not_disturb\" -> Optional.of(OnlineStatus.DO_NOT_DISTURB);\r\n            case \"invisible\" -> Optional.of(OnlineStatus.INVISIBLE);\r\n            default -> Optional.empty();\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java b/src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java
--- a/src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java	(date 1756287039443)
@@ -35,7 +35,6 @@
             return;
         }
 
-        // We expect "!set status <value>", so we need at least 2 arguments.
         if (args.size() < 2 || !args.get(0).equalsIgnoreCase("status")) {
             event.getChannel().sendMessage("Invalid command usage. " + getHelp()).queue();
             return;
Index: src/main/resources/config.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ============================================================\r\n# Plugin: DiscordServerStatus\r\n# Author: Goros\r\n# Copyright (C) 2025 Goros. All rights reserved.\r\n# Description: This plugin integrates Discord with Minecraft\r\n# and allows you to display server status in your Discord channel.\r\n# ============================================================\r\ndiscord:\r\n  bot-token: \"YOUR_BOT_TOKEN\" # Replace with your Discord bot token\r\n  channel-id: \"YOUR_DISCORD_CHANNEL_ID\"\r\n  prefix: \"!\" #Example: \"!ip\" will trigger the ip display\r\n  online-status: \"online\" # online | dnd or do_not_disturb | invisible | idle
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/config.yml b/src/main/resources/config.yml
--- a/src/main/resources/config.yml	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/src/main/resources/config.yml	(date 1756287606014)
@@ -9,4 +9,5 @@
   bot-token: "YOUR_BOT_TOKEN" # Replace with your Discord bot token
   channel-id: "YOUR_DISCORD_CHANNEL_ID"
   prefix: "!" #Example: "!ip" will trigger the ip display
-  online-status: "online" # online | dnd or do_not_disturb | invisible | idle
\ No newline at end of file
+  online-status: "online" # online | dnd or do_not_disturb | invisible | idle
+  activity-status: "Something"
\ No newline at end of file
Index: target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
--- a/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1756321014966)
@@ -1,0 +1,10 @@
+org\goros\discordServerStatus\utils\EmbedConfigLoader.class
+org\goros\discordServerStatus\discord\commands\SetOnlineStatusCommand.class
+org\goros\discordServerStatus\utils\EmbedFactory.class
+org\goros\discordServerStatus\discord\BotRegistry\BotRegistry.class
+org\goros\discordServerStatus\discord\commands\manager\CommandManager.class
+org\goros\discordServerStatus\discord\commands\SetActivityStatus.class
+org\goros\discordServerStatus\utils\PlaceholderParser.class
+org\goros\discordServerStatus\discord\commands\interfaces\ICommand.class
+org\goros\discordServerStatus\discord\commands\IpCommand.class
+org\goros\discordServerStatus\listener\DiscordListener.class
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2dce37b4-ca4d-41b9-b83a-fc1083c9d812\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/config.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/config.yml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/org/goros/discordServerStatus/discord/commands/manager/CommandManager.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Vuththana&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Vuththana/DiscordServerStatus.git&quot;,\r\n    &quot;accountId&quot;: &quot;48b4bbcf-465c-4930-969b-fe9333573dfc&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"31XZhmMziBOsjyWLScVjEqb56aj\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Maven.discord [install].executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Documents/DiscordServerStatus-main&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"discord [install]\" type=\"MavenRunConfiguration\" factoryName=\"Maven\" nameIsGenerated=\"true\">\r\n      <MavenSettings>\r\n        <option name=\"myGeneralSettings\" />\r\n        <option name=\"myRunnerSettings\" />\r\n        <option name=\"myRunnerParameters\">\r\n          <MavenRunnerParameters>\r\n            <option name=\"cmdOptions\" />\r\n            <option name=\"profiles\">\r\n              <set />\r\n            </option>\r\n            <option name=\"goals\">\r\n              <list>\r\n                <option value=\"install\" />\r\n              </list>\r\n            </option>\r\n            <option name=\"multimoduleDir\" />\r\n            <option name=\"pomFileName\" />\r\n            <option name=\"profilesMap\">\r\n              <map />\r\n            </option>\r\n            <option name=\"projectsCmdOptionValues\">\r\n              <list />\r\n            </option>\r\n            <option name=\"resolveToWorkspace\" value=\"false\" />\r\n            <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\r\n          </MavenRunnerParameters>\r\n        </option>\r\n      </MavenSettings>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2dce37b4-ca4d-41b9-b83a-fc1083c9d812\" name=\"Changes\" comment=\"\" />\r\n      <created>1755672498553</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1755672498553</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/.idea/workspace.xml	(date 1756320884084)
@@ -5,13 +5,18 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2dce37b4-ca4d-41b9-b83a-fc1083c9d812" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/SetActivityStatus.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/SetOnlineStatusCommand.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/config.yml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/config.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/org/goros/discordServerStatus/discord/commands/manager/CommandManager.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/org/goros/discordServerStatus/DiscordServerStatus.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/org/goros/discordServerStatus/DiscordServerStatus.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/discord-1.5-shaded.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/discord-1.5-shaded.jar" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/discord-1.5.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/discord-1.5.jar" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/original-discord-1.5.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/original-discord-1.5.jar" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,7 +31,13 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="activity-status" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="GitHubPullRequestSearchHistory">{
   &quot;lastFilter&quot;: {
@@ -102,4 +113,15 @@
     </task>
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
 </project>
\ No newline at end of file
Index: src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.goros.discordServerStatus.discord.commands.manager;\r\n\r\nimport net.dv8tion.jda.api.events.message.MessageReceivedEvent;\r\nimport org.goros.discordServerStatus.discord.commands.IpCommand;\r\nimport org.goros.discordServerStatus.discord.commands.SetOnlineStatusCommand;\r\nimport org.goros.discordServerStatus.discord.commands.interfaces.ICommand;\r\n\r\nimport java.util.*;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class CommandManager {\r\n    private final Map<String, ICommand> commands = new HashMap<>();\r\n\r\n    public CommandManager() {\r\n\r\n        addCommand(new SetOnlineStatusCommand());\r\n        addCommand(new IpCommand());\r\n    }\r\n\r\n    private void addCommand(ICommand command) {\r\n        commands.put(command.getName().toLowerCase(), command);\r\n    }\r\n\r\n\r\n    // handle the prefix command\r\n    public void handle(MessageReceivedEvent event, String prefix) {\r\n        String[] split = event.getMessage().getContentRaw()\r\n                .replaceFirst(\"(?i)\" + Pattern.quote(prefix), \"\")\r\n                .split(\"\\\\s+\");\r\n        String commandName = split[0].toLowerCase();\r\n\r\n        if (commands.containsKey(commandName)) {\r\n            List<String> args = Arrays.asList(split).subList(1, split.length);\r\n            commands.get(commandName).execute(event, args);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java b/src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java
--- a/src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/src/main/java/org/goros/discordServerStatus/discord/commands/manager/CommandManager.java	(date 1756286659283)
@@ -2,6 +2,7 @@
 
 import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
 import org.goros.discordServerStatus.discord.commands.IpCommand;
+import org.goros.discordServerStatus.discord.commands.SetActivityStatus;
 import org.goros.discordServerStatus.discord.commands.SetOnlineStatusCommand;
 import org.goros.discordServerStatus.discord.commands.interfaces.ICommand;
 
@@ -15,6 +16,7 @@
 
         addCommand(new SetOnlineStatusCommand());
         addCommand(new IpCommand());
+        addCommand(new SetActivityStatus());
     }
 
     private void addCommand(ICommand command) {
Index: src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.goros.discordServerStatus;\r\n\r\nimport net.dv8tion.jda.api.JDA;\r\nimport org.bukkit.Bukkit;\r\nimport org.bukkit.Statistic;\r\nimport org.bukkit.configuration.file.FileConfiguration;\r\nimport org.bukkit.configuration.file.YamlConfiguration;\r\nimport org.bukkit.plugin.java.JavaPlugin;\r\nimport org.goros.discordServerStatus.discord.BotRegistry.BotRegistry;\r\nimport org.goros.discordServerStatus.listener.DiscordListener;\r\n\r\nimport java.io.File;\r\n\r\npublic final class DiscordServerStatus extends JavaPlugin {\r\n    private JDA jda;\r\n    private String botToken;\r\n    private String channelId;\r\n    private String onlineStatus;\r\n    private File ipFile;\r\n    private FileConfiguration ipConfig;\r\n\r\n    @Override\r\n    public void onEnable() {\r\n        saveDefaultConfig();\r\n        createIpConfig();\r\n        botToken = getConfig().getString(\"discord.bot-token\");\r\n        channelId = getConfig().getString(\"discord.channel-id\");\r\n        String prefix = getConfig().getString(\"discord.prefix\", \"!\");\r\n        onlineStatus = getConfig().getString(\"discord.online-status\");\r\n\r\n        //Validate the config values\r\n        if (botToken == null || botToken.isEmpty() || channelId == null || channelId.isEmpty()) {\r\n            getLogger().severe(\"Bot token or channel ID is missing in the config.\");\r\n            getServer().getPluginManager().disablePlugin(this); // Disable plugin if config values are null\r\n            return;\r\n        }\r\n\r\n        BotRegistry registry = new BotRegistry(botToken, onlineStatus);\r\n        registry.startBot();\r\n        registry.getJda().addEventListener(new DiscordListener(channelId, prefix));\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onDisable() {\r\n        if (jda != null) {\r\n            jda.shutdownNow(); // ✅ ensures all OkHttp threads stop\r\n            jda = null;\r\n            getLogger().info(\"Discord bot disconnected.\");\r\n        }\r\n    }\r\n    private void createIpConfig() {\r\n        ipFile = new File(getDataFolder(), \"Embed/IP.yml\");\r\n        if (!ipFile.exists()) {\r\n            saveResource(\"Embed/IP.yml\", false); // copy from JAR\r\n        }\r\n        ipConfig = YamlConfiguration.loadConfiguration(ipFile);\r\n    }\r\n\r\n    public FileConfiguration getIpConfig() {\r\n        return ipConfig;\r\n    }\r\n\r\n    public JDA getJda() {return jda;};\r\n    public String getBotToken() { return botToken; }\r\n    public String getChannelId() {\r\n        return channelId;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java b/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java
--- a/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java	(revision 07a43d6dd62c732afec4b08e7af8822566f11829)
+++ b/src/main/java/org/goros/discordServerStatus/DiscordServerStatus.java	(date 1756320511293)
@@ -5,6 +5,7 @@
 import org.bukkit.Statistic;
 import org.bukkit.configuration.file.FileConfiguration;
 import org.bukkit.configuration.file.YamlConfiguration;
+import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.java.JavaPlugin;
 import org.goros.discordServerStatus.discord.BotRegistry.BotRegistry;
 import org.goros.discordServerStatus.listener.DiscordListener;
@@ -18,11 +19,13 @@
     private String onlineStatus;
     private File ipFile;
     private FileConfiguration ipConfig;
+    private static DiscordServerStatus instance;
 
     @Override
     public void onEnable() {
         saveDefaultConfig();
         createIpConfig();
+        instance = this;
         botToken = getConfig().getString("discord.bot-token");
         channelId = getConfig().getString("discord.channel-id");
         String prefix = getConfig().getString("discord.prefix", "!");
@@ -61,6 +64,9 @@
         return ipConfig;
     }
 
+    public static DiscordServerStatus getInstance() {
+        return instance;
+    }
     public JDA getJda() {return jda;};
     public String getBotToken() { return botToken; }
     public String getChannelId() {
